"""Initial Tables

Revision ID: 54aac8176321
Revises: 
Create Date: 2025-05-04 17:31:27.538654

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '54aac8176321'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('franchise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=30), nullable=False),
    sa.Column('description', sa.String(length=150), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('strength', sa.Float(), nullable=False),
    sa.Column('speed', sa.Float(), nullable=False),
    sa.Column('health', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('f_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('franchise_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['franchise_id'], ['franchise.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('battle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('char1_id', sa.Integer(), nullable=False),
    sa.Column('char2_id', sa.Integer(), nullable=False),
    sa.Column('vote1', sa.Integer(), nullable=True),
    sa.Column('vote2', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['char1_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['char2_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('c_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('char_id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.String(length=500), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['char_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('char_fran',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('char_id', sa.Integer(), nullable=False),
    sa.Column('franchise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['char_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['franchise_id'], ['franchise.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('char_fran')
    op.drop_table('c_review')
    op.drop_table('battle')
    op.drop_table('f_review')
    op.drop_table('character')
    op.drop_table('user')
    op.drop_table('franchise')
    # ### end Alembic commands ###
